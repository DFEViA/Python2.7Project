24 虚拟茶话会
实现一个聊天服务器——也就是让几个人通过网络进行实时交互聊天的程序。
其中比较简单而且自然的方式是使用Twisted框架。
本章还是以标准库内的asyncore和asycchat模块为基础建立程序。
24.1 问题
1、学习网络编程的知识
2、可以按照自己的想法设计，彰显个性化

聊天服务器应该具备如下功能：
1、服务器能接受来自不同用户的多个连接。
2、允许用户同时（并行）操作。
3、能够解释命令，例如，say或者logout
4、容易扩展

24.2 有用的工具
网络程序的基础组件是套接字

程序所用的端口号会受限制并且需要管理员权限的。一般来说，用1023以上的端口就可以。

24.4 初次实现
需要创建两个这类：一个作为服务器，一个用于表示每个聊天会话（已连接用户）

24.4.1 ChatServer类

24.4.2 ChatSession类

telnet localhost 5008

24.5 再次实现
24.5.1 基础命令解释
接下来会演示如何使用标准库总cmd模块内的Cmd类将命令解释模块化（不过不能直接使用这个类，因为它只能和sys.stdin和sys.stdout一起使用，所处理的则是流对象）。

24.5.2 房间
每个状态都可以用自定义的命令处理程序来表示。

24.5.3 登录和退出房间

24.5.4 主聊天室
主聊天室也要覆盖add和remove方法。

24.5.5 新的服务器
1、ChatSession有个enter方法，用于进入新房间。
2、ChatSession构造函数使用了LoginRoom
3、handle_close方法使用了LogoutRoom
ChatServer构造函数增加了users字典，并且将名为main——room的ChatRoom增加为自己的特性
